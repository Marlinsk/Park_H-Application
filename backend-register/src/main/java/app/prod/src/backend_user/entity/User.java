package app.prod.src.backend_user.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "User")
public class User {

	protected String name;
	protected String birthdate;
	protected String cellphone;
	protected String email;

	protected String id;
	protected String nickname;
	protected String password;

	public User() {
		super();
	}

	public User(String id, String nickname, String password, String name, String birthdate, String cellphone,
			String email) {
		super();
		this.id = id;
		this.nickname = nickname;
		this.password = password;
		this.name = name;
		this.birthdate = birthdate;
		this.cellphone = cellphone;
		this.email = email;
	}

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	public String getId() {
		return id;
	}

	@DynamoDBAttribute
	public String getNickname() {
		return nickname;
	}

	public String getPassword() {
		return password;
	}

	@DynamoDBAttribute
	public String getName() {
		return name;
	}

	@DynamoDBAttribute
	public String getBirthdate() {
		return birthdate;
	}

	@DynamoDBAttribute
	public String getCellphone() {
		return cellphone;
	}

	@DynamoDBAttribute
	public String getEmail() {
		return email;
	}

	public void setId(String id) {
		this.id = id;
	}

	public void setNickname(String nickname) {
		this.nickname = nickname;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setBirthdate(String birthdate) {
		this.birthdate = birthdate;
	}

	public void setCellphone(String cellphone) {
		this.cellphone = cellphone;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Override
	public String toString() {
		return "User [id: " + id + ", nickname: " + nickname + ", password: " + password + ", name: " + name
				+ ", birth date: " + birthdate + ", cellphone: " + cellphone + ", email: " + email + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((birthdate == null) ? 0 : birthdate.hashCode());
		result = prime * result + ((cellphone == null) ? 0 : cellphone.hashCode());
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		result = prime * result + ((nickname == null) ? 0 : nickname.hashCode());
		result = prime * result + ((password == null) ? 0 : password.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		User other = (User) obj;
		if (birthdate == null) {
			if (other.birthdate != null)
				return false;
		} else if (!birthdate.equals(other.birthdate))
			return false;
		if (cellphone == null) {
			if (other.cellphone != null)
				return false;
		} else if (!cellphone.equals(other.cellphone))
			return false;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (nickname == null) {
			if (other.nickname != null)
				return false;
		} else if (!nickname.equals(other.nickname))
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		return true;
	}
}
