package app.prod.src.backend_garage.entity;

import java.math.BigDecimal;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "datapay")
public class PaymentForm {

	private String id;
	private BigDecimal valueRent;	
	private String payment;
	
	public PaymentForm() {
		super();
		// TODO Auto-generated constructor stub
	}

	public PaymentForm(BigDecimal valueRent, String payment) {
		super();
		this.valueRent = valueRent; 
		this.payment = payment;
	}
    
	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}
    
	@DynamoDBAttribute
	public BigDecimal getValueRent() {
		return valueRent;
	}

	public void setValueRent(BigDecimal valueRent) {
		this.valueRent = valueRent;
	}

	@DynamoDBAttribute
	public String getPayment() {
		return payment;
	}

	public void setPayment(String payment) {
		this.payment = payment;
	}

	@Override
	public String toString() {
		return "paymentForm [id: " + id + ", valueRent: " + valueRent + ", payment: " + payment + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((payment == null) ? 0 : payment.hashCode());
		result = prime * result + ((valueRent == null) ? 0 : valueRent.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PaymentForm other = (PaymentForm) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (payment == null) {
			if (other.payment != null)
				return false;
		} else if (!payment.equals(other.payment))
			return false;
		if (valueRent == null) {
			if (other.valueRent != null)
				return false;
		} else if (!valueRent.equals(other.valueRent))
			return false;
		return true;
	}
	
}
