package app.prod.src.backend_user.entity;

import app.prod.src.backend_user.extraclass.extraclass;

import java.util.Date;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "")
public class user extends extraclass {

	private String id;
	
	@NotNull(message = "Nome não pode ser nulo")
	private String fullname;
	
	@NotNull(message = "Nome de usuário não pode ser nulo")
	@Size(min = 6, max = 20, message = "Nome de usuário deve ter no mínimo 6 e no máximo 20 caracteres")
	private String username;
	
	@NotNull(message = "Data de nascimento não pode ser nula")
	private Date birthdate;
	
	@NotNull(message = "Nome do estado não pode ser nulo")
	private String statename;
	
	@NotNull(message = "Nome da cidade não pode ser nulo")
	private String cityname;
	
	@Email(message = "Email deve ser válido")
	@NotNull(message = "Email não pode ser nulo")
	private String email;
	
	@Size(min = 12, message = "A senha deve ter no mínimo 12 caracteres")
	@NotNull(message = "Senha não pode ser nula")
	private String password;

	public user() {
		// TODO Auto-generated constructor stub
	}

	public user(String fullname, String username, Date birthdate, String statename, String cityname, String email,
			String password) {
		super();
		
		this.fullname = fullname;
		this.username = username;
		this.birthdate = birthdate;
		this.statename = statename;
		this.cityname = cityname;
		this.email = email;
		this.password = encryptPassword(password);
	}

	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@DynamoDBAttribute
	public String getFullname() {
		return fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@DynamoDBAttribute
	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@DynamoDBAttribute
	public Date getBirthdate() {
		return birthdate;
	}

	public void setBirthdate(Date birthdate) {
		this.birthdate = birthdate;
	}

	@DynamoDBAttribute
	public String getStatename() {
		return statename;
	}

	public void setStatename(String statename) {
		this.statename = statename;
	}

	@DynamoDBAttribute
	public String getCityname() {
		return cityname;
	}

	public void setCityname(String cityname) {
		this.cityname = cityname;
	}

	@DynamoDBAttribute
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@DynamoDBAttribute
	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Override
	public String toString() {
		return "user data [id: " + id + ", full name: " + fullname + ", username: " + username + ", birth date: "
				+ birthdate + ", state name: " + statename + ", city name: " + cityname + ", email: " + email
				+ ", password: " + password + "]";
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((birthdate == null) ? 0 : birthdate.hashCode());
		result = prime * result + ((cityname == null) ? 0 : cityname.hashCode());
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + ((fullname == null) ? 0 : fullname.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((password == null) ? 0 : password.hashCode());
		result = prime * result + ((statename == null) ? 0 : statename.hashCode());
		result = prime * result + ((username == null) ? 0 : username.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		user other = (user) obj;
		if (birthdate == null) {
			if (other.birthdate != null)
				return false;
		} else if (!birthdate.equals(other.birthdate))
			return false;
		if (cityname == null) {
			if (other.cityname != null)
				return false;
		} else if (!cityname.equals(other.cityname))
			return false;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (fullname == null) {
			if (other.fullname != null)
				return false;
		} else if (!fullname.equals(other.fullname))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		if (statename == null) {
			if (other.statename != null)
				return false;
		} else if (!statename.equals(other.statename))
			return false;
		if (username == null) {
			if (other.username != null)
				return false;
		} else if (!username.equals(other.username))
			return false;
		return true;
	}
}